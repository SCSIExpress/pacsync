# Docker Compose override for horizontal scaling
# Usage: docker-compose -f docker-compose.yml -f docker-compose.scale.yml up --scale pacman-sync-server=3

services:
  # Remove container_name to allow scaling
  pacman-sync-server:
    container_name: null
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 60s
        order: start-first
    environment:
      # Enhanced database pool configuration for scaling
      DB_POOL_MIN_SIZE: 1
      DB_POOL_MAX_SIZE: 5
      
      # Graceful shutdown configuration
      SHUTDOWN_TIMEOUT: 30
      
      # Load balancer health check optimization
      HEALTH_CHECK_INTERVAL: 15

  # HAProxy Load Balancer
  haproxy:
    image: haproxy:2.8-alpine
    container_name: pacman-sync-haproxy
    ports:
      - "4444:4444"
      - "8404:8404"  # Stats interface
      - "8405:8405"  # Monitoring interface
    volumes:
      - ./deploy/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - pacman-sync-server
    networks:
      - pacman-sync-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8404/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: pacman-sync-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - pacman-sync-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: pacman-sync-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deploy/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./deploy/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - pacman-sync-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local