global
    daemon
    log stdout local0 info
    maxconn 4096
    
    # SSL/TLS configuration
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option redispatch
    option forwardfor
    
    # Timeouts
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    
    # Health check defaults
    timeout check 5000ms
    
    # Error handling
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

# Statistics interface
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats show-legends
    stats show-desc "Pacman Sync Utility Load Balancer"

# Main frontend for the application
frontend pacman_sync_frontend
    bind *:8080
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Health check routing - direct to any healthy backend
    acl is_health_check path_beg /health
    use_backend pacman_sync_health if is_health_check
    
    # API routing with session affinity for stateful operations
    acl is_api path_beg /api
    use_backend pacman_sync_api if is_api
    
    # Default backend for web UI and other requests
    default_backend pacman_sync_web

# Backend for health checks - no session affinity needed
backend pacman_sync_health
    balance roundrobin
    option httpchk GET /health/ready
    http-check expect status 200
    
    # Server instances
    server server1 pacman-sync-server_1:8080 check inter 10s fall 3 rise 2
    server server2 pacman-sync-server_2:8080 check inter 10s fall 3 rise 2
    server server3 pacman-sync-server_3:8080 check inter 10s fall 3 rise 2

# Backend for API requests - with session affinity for sync operations
backend pacman_sync_api
    balance roundrobin
    
    # Session affinity based on endpoint ID for sync operations
    stick-table type string len 64 size 100k expire 30m
    stick on hdr(X-Endpoint-ID)
    
    # Health checks using the detailed endpoint
    option httpchk GET /health/ready
    http-check expect status 200
    
    # Enhanced health monitoring
    http-check send-state
    
    # Server instances with enhanced monitoring
    server server1 pacman-sync-server_1:8080 check inter 10s fall 3 rise 2 weight 100
    server server2 pacman-sync-server_2:8080 check inter 10s fall 3 rise 2 weight 100
    server server3 pacman-sync-server_3:8080 check inter 10s fall 3 rise 2 weight 100

# Backend for web UI and static content
backend pacman_sync_web
    balance roundrobin
    
    # Health checks
    option httpchk GET /health/live
    http-check expect status 200
    
    # Compression for static content
    compression algo gzip
    compression type text/html text/plain text/css text/javascript application/javascript application/json
    
    # Server instances
    server server1 pacman-sync-server_1:8080 check inter 15s fall 3 rise 2
    server server2 pacman-sync-server_2:8080 check inter 15s fall 3 rise 2
    server server3 pacman-sync-server_3:8080 check inter 15s fall 3 rise 2

# Backend for monitoring and detailed health checks
backend pacman_sync_monitoring
    balance roundrobin
    
    # Detailed health check
    option httpchk GET /health/detailed
    http-check expect status 200
    
    # Server instances
    server server1 pacman-sync-server_1:8080 check inter 30s fall 2 rise 1
    server server2 pacman-sync-server_2:8080 check inter 30s fall 2 rise 1
    server server3 pacman-sync-server_3:8080 check inter 30s fall 2 rise 1

# Listen section for monitoring endpoints
listen monitoring
    bind *:8405
    mode http
    
    # Expose detailed health information
    http-request use-service prometheus-exporter if { path /metrics }
    
    # Proxy detailed health checks
    acl is_detailed_health path_beg /health/detailed
    use_backend pacman_sync_monitoring if is_detailed_health
    
    # Default to stats
    stats enable
    stats uri /
    stats refresh 10s
    stats admin if TRUE